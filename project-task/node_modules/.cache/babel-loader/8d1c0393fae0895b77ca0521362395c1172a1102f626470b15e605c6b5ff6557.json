{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nagii Files\\\\IT Project\\\\project-task\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// export default function Login() {\n//   const [role, setRole] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [captchaInput, setCaptchaInput] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleLogin = () => {\n//     if (!role || !username || !password || !captchaInput) {\n//       alert('Please fill all fields.');\n//       return;\n//     }\n//     if (role === 'Admin') {\n//       alert('Redirecting to Admin credential creation...');\n//       // Implement admin registration logic here\n//     } else {\n//       navigate('/home');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-page\">\n//       <select onChange={(e) => setRole(e.target.value)} value={role}>\n//         <option value=\"\">Default select</option>\n//         <option value=\"Admin\">Admin</option>\n//         <option value=\"User\">User</option>\n//       </select>\n//       <input type=\"text\" placeholder=\"User Name\" value={username} onChange={(e) => setUsername(e.target.value)} />\n//       <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n//       <input type=\"text\" placeholder=\"Enter Captcha\" value={captchaInput} onChange={(e) => setCaptchaInput(e.target.value)} />\n//       <button onClick={handleLogin}>Login</button>\n//     </div>\n//   );\n// }\nimport React, { useState, useEffect } from 'react';\nimport './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateCaptcha = () => {\n  const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let captcha = '';\n  for (let i = 0; i < 6; i++) {\n    captcha += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return captcha;\n};\nconst LoginPage = () => {\n  _s();\n  const [userType, setUserType] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [captchaInput, setCaptchaInput] = useState('');\n  const [captcha, setCaptcha] = useState('');\n  const [captchaError, setCaptchaError] = useState('');\n  useEffect(() => {\n    setCaptcha(generateCaptcha());\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (captchaInput === captcha) {\n      setCaptchaError('');\n      console.log('Login success ðŸŽ‰');\n      // Proceed with your login logic here\n    } else {\n      setCaptchaError('Invalid captcha. Please try again.');\n      setCaptcha(generateCaptcha());\n      setCaptchaInput('');\n    }\n  };\n  const refreshCaptcha = () => {\n    setCaptcha(generateCaptcha());\n    setCaptchaError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: userType,\n        onChange: e => setUserType(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Default select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"User Name\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captcha-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Captcha\",\n          value: captchaInput,\n          onChange: e => setCaptchaInput(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captcha-image\",\n          onClick: refreshCaptcha,\n          title: \"Click to refresh\",\n          children: captcha\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), captchaError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: captchaError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Xw4wqphaPFrihbqPWEO5f/tRbE8=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateCaptcha","chars","captcha","i","charAt","Math","floor","random","length","LoginPage","_s","userType","setUserType","username","setUsername","password","setPassword","captchaInput","setCaptchaInput","setCaptcha","captchaError","setCaptchaError","handleSubmit","e","preventDefault","console","log","refreshCaptcha","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","type","placeholder","onClick","title","_c","$RefreshReg$"],"sources":["C:/Nagii Files/IT Project/project-task/src/pages/Login.jsx"],"sourcesContent":["// import { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// export default function Login() {\r\n//   const [role, setRole] = useState('');\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [captchaInput, setCaptchaInput] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = () => {\r\n//     if (!role || !username || !password || !captchaInput) {\r\n//       alert('Please fill all fields.');\r\n//       return;\r\n//     }\r\n//     if (role === 'Admin') {\r\n//       alert('Redirecting to Admin credential creation...');\r\n//       // Implement admin registration logic here\r\n//     } else {\r\n//       navigate('/home');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-page\">\r\n//       <select onChange={(e) => setRole(e.target.value)} value={role}>\r\n//         <option value=\"\">Default select</option>\r\n//         <option value=\"Admin\">Admin</option>\r\n//         <option value=\"User\">User</option>\r\n//       </select>\r\n//       <input type=\"text\" placeholder=\"User Name\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n//       <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n//       <input type=\"text\" placeholder=\"Enter Captcha\" value={captchaInput} onChange={(e) => setCaptchaInput(e.target.value)} />\r\n//       <button onClick={handleLogin}>Login</button>\r\n//     </div>\r\n//   );\r\n// }\r\nimport React, { useState, useEffect } from 'react';\r\nimport './';\r\n\r\nconst generateCaptcha = () => {\r\n  const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  let captcha = '';\r\n  for (let i = 0; i < 6; i++) {\r\n    captcha += chars.charAt(Math.floor(Math.random() * chars.length));\r\n  }\r\n  return captcha;\r\n};\r\n\r\nconst LoginPage = () => {\r\n  const [userType, setUserType] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [captchaInput, setCaptchaInput] = useState('');\r\n  const [captcha, setCaptcha] = useState('');\r\n  const [captchaError, setCaptchaError] = useState('');\r\n\r\n  useEffect(() => {\r\n    setCaptcha(generateCaptcha());\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (captchaInput === captcha) {\r\n      setCaptchaError('');\r\n      console.log('Login success ðŸŽ‰');\r\n      // Proceed with your login logic here\r\n    } else {\r\n      setCaptchaError('Invalid captcha. Please try again.');\r\n      setCaptcha(generateCaptcha());\r\n      setCaptchaInput('');\r\n    }\r\n  };\r\n\r\n  const refreshCaptcha = () => {\r\n    setCaptcha(generateCaptcha());\r\n    setCaptchaError('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-box\">\r\n      <h2>Login Page</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <select value={userType} onChange={(e) => setUserType(e.target.value)} required>\r\n          <option value=\"\">Default select</option>\r\n          <option value=\"admin\">Admin</option>\r\n          <option value=\"user\">User</option>\r\n        </select>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"User Name\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <div className=\"captcha-box\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Captcha\"\r\n            value={captchaInput}\r\n            onChange={(e) => setCaptchaInput(e.target.value)}\r\n            required\r\n          />\r\n          <div className=\"captcha-image\" onClick={refreshCaptcha} title=\"Click to refresh\">\r\n            {captcha}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Captcha error message */}\r\n        {captchaError && <p className=\"error\">{captchaError}</p>}\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}